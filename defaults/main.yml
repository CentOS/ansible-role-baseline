# Default list of admins with sudo right
# Not defined here, but expected at the group_vars/host_vars level
# list in the following format (example)
#
#admins_list:
#  - login_name: arrfab
#    full_name: Fabian Arrotin
#    sudo_right: "true"
#    ssh_pub_key:
#      - ssh-rsa bla
#      - ssh-rsa bla2
#

# Same but with additional users that should be created
# local_users_list: 
#

# Users to eventually remove 
# local_expired_users:
#   - userA
#   - userB
local_expired_users: []

# Default pkgs we want to have everywhere:
packages_list:
  - screen
  - nfs-utils
  - rsync
  - bridge-utils
  - smartmontools
  - mtr
  - pv
  - jq

# RHEL support
# As we'll start also deploying RHEL we need to drop .repo and TLS certs to access CDN
# We'll use {{ ansible_distribution }} to verify if that's 'RedHat'
# Does this RHEL host needs cdn access instead of internal mirror
rhel_host_use_cdn: False
# Depending on previous booleans, either use internal or cdn mirror
rhel_internal_mirror: http://mirror.internal/RHEL/
# For CDN we'll distribute some TLS files from pkistore
rhel_cdn_mirror: http://fqdn.cdn
rhel_cdn_mirror_key: key.pem
rhel_cdn_mirror_crt: crt.pem


# Do we want zabbix-agent by default
zabbix_monitoring: True
zabbix_server: localhost  

tuned_profile: throughput-performance

# Enabling the yum auto update script
yum_auto_update: True

# Which ntp servers to use as sources
# Defaulting to the ones in pkg
ntp_servers_list:
  - 0.centos.pool.ntp.org
  - 1.centos.pool.ntp.org
  - 2.centos.pool.ntp.org
  - 3.centos.pool.ntp.org

# Just in case we want the node to be also ntpd - default to False
# Which subnet to allow if set to True, default to 127.0.0.1
ntp_host: False
ntp_allowed_clients:
  - 127.0.0.1

# Are there some TLS CA certificates that we want to trust by default ?
# If list isn't empty it should come from 'pkistore' , like for any role using TLS/PKI
pki_trusted_ca_list: []

# Do we want to copy some scripts from filestore (no template/no role) on a specific host
# That permits to have scripts to be copied without being in a role for various reasons
# example
# baseline_distributed_files:
#   - src: "{{ filestore }}/my-script"
#     dest: /usr/local/bin/my-script
#     owner: root
#     mode: 0750
baseline_distributed_files: []

# We can also, outside of specific roles, define some booleans that need to be turned on
# example
# local_selinux_booleans:
#   - httpd_use_nfs
local_selinux_booleans: []

# Same for some specific host-only cron tasks, defined per group/host inventory and not through role
# default user if undefined would be 'root' and minute/hour/day would be '*' if not specified
# example
# local_cron_entries:
#   - name: say hello
#     job: logger $(hostname)
#   - name: say hello from user1
#     job: logger $USER
#     user: user1
#     minute: '*/5'
local_cron_entries: []

# We can also set crypto-policy on centos stream 8+
# We just need to define one (none by default) that really exists (/usr/share/crypto-policies/policies/)
# example (not useful as it's already DEFAULT) :
# baseline_crypto_policy: DEFAULT 


# DNF versionlock
# We can use dnf-versionlock plugin to pin specific version (in case of issues with updated pkgs)
# It currently support only el8/el8s with the following lists:
centos_8s_versionlock_pkgs: []
rhel_8_versionlock_pkgs: []

# Do we need yum to go through proxy ?
# Not system-wide so only yum
dnf_use_proxy: False
dnf_proxy_url: http://caching.internal:8080


# Do we want to modify /etc/hosts with a block ? 
# We normally only use dns resolvers/zones but for tmp .dev. env we can define a block that will be added
# If undefined, it's just skipped (default)
# example:
# etc_hosts_block: |
#   192.168.1.1 node1
#   192.168.1.2 node2
